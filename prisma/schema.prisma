// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String?
  username     String?        @unique
  passwordHash String?
  googleId     String?        @unique
  email        String?        @unique
  role         Role           @default(USER)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  refreshToken RefreshToken[]
  contents     Content[]
  chatGroups   ChatGroup[]
}

model RefreshToken {
  id     String @id @default(uuid())
  User   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Content {
  id         Int         @id @default(autoincrement())
  text       String
  imageUrl   String?
  scheduleAt DateTime?
  endDate    DateTime?
  active     Boolean     @default(true)
  frequency  String?
  createdAt  DateTime    @default(now())
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  chatGroups ChatGroup[]
}

model ChatGroup {
  id        Int      @id @default(autoincrement())
  name      String
  chatId    String   @unique
  Content   Content? @relation(fields: [contentId], references: [id])
  contentId Int?
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

enum Role {
  ADMIN
  USER
}
